# Docker for Amazon Linux 2
- name: Install Docker on Linux
  yum: pkg="{{ docker }}" state=present
  when: ansible_facts['distribution'] == "Amazon" 
  notify: start docker

# Docker for Ubuntu
- name: Install aptitude using apt
  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
  when: ansible_facts['distribution'] == "Ubuntu" 

- name: Install required system packages
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Update apt and install docker-ce
  apt: update_cache=yes name=docker-ce state=latest
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Install Docker Module for Python
  pip:
    name: docker
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Pull default Docker image
  docker_image:
    name: "{{ container_image }}"
    source: pull
  when: ansible_facts['distribution'] == "Ubuntu"

- template:
    src: distro.j2
    dest: ./distro.txt
